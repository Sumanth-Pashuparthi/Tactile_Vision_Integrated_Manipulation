<?xml version="1.0"?>
<robot name="camera_table_scene">
    <!-- World link -->
    <link name="world"/>
    
    <!-- Table -->
    <link name="table">
        <inertial>
            <origin xyz="0 0 0.0145"/>
            <mass value="0.1"/>
            <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
        </inertial>
        <visual>
            <origin xyz="0 0 0"/>
            <geometry>
                <box size="0.8 0.8 0.02"/>
            </geometry>
            <material name="wood">
                <color rgba="0.8 0.6 0.4 1"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 0"/>
            <geometry>
                <box size="0.8 0.8 0.02"/>
            </geometry>
        </collision>
    </link>

    <!-- Fix table to world -->
    <joint name="table_to_world" type="fixed">
        <parent link="world"/>
        <child link="table"/>
        <origin xyz="0 0 0.5" rpy="0 0 0"/>
    </joint>

    <!-- Coke Can -->
    <link name="coke_can">
        <inertial>
            <mass value="0.390"/>
            <origin xyz="0 0 0.06"/>
            <inertia ixx="0.00058" ixy="0.0" ixz="0.0" iyy="0.00058" iyz="0.0" izz="0.00019"/>
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.033" length="0.12"/>
            </geometry>
            <material name="red">
                <color rgba="1 0 0 1"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.033" length="0.12"/>
            </geometry>
        </collision>
    </link>

    <!-- Place coke can on table center -->
    <joint name="can_to_table" type="fixed">
        <parent link="table"/>
        <child link="coke_can"/>
        <origin xyz="0 0 0.07" rpy="0 0 0"/>
    </joint>

    <!-- Camera 1 (Front) -->
    <link name="camera1_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
            <material name="black">
                <color rgba="0 0 0 1"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </collision>
    </link>

    <joint name="camera1_joint" type="fixed">
        <parent link="world"/>
        <child link="camera1_link"/>
        <!-- Positioned at y=-0.6, looking at height 0.5 (table) + 0.07 (can height/2) -->
        <origin xyz="0 -0.6 1.0" rpy="${-atan2(0.43, 0.6)} 0 0"/>
    </joint>

    <!-- Camera 2 (Back) -->
    <link name="camera2_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </collision>
    </link>

    <joint name="camera2_joint" type="fixed">
        <parent link="world"/>
        <child link="camera2_link"/>
        <!-- Positioned at y=0.6, looking at height 0.5 (table) + 0.07 (can height/2) -->
        <origin xyz="0 0.6 1.0" rpy="${atan2(0.43, 0.6)} ${pi} 0"/>
    </joint>

    <!-- Camera 3 (Left) -->
    <link name="camera3_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </collision>
    </link>

    <joint name="camera3_joint" type="fixed">
        <parent link="world"/>
        <child link="camera3_link"/>
        <!-- Positioned at x=-0.6, looking at height 0.5 (table) + 0.07 (can height/2) -->
        <origin xyz="-0.6 0 1.0" rpy="${-atan2(0.43, 0.6)} 0 ${-pi/2}"/>
    </joint>

    <!-- Camera 4 (Right) -->
    <link name="camera4_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </collision>
    </link>

    <joint name="camera4_joint" type="fixed">
        <parent link="world"/>
        <child link="camera4_link"/>
        <!-- Positioned at x=0.6, looking at height 0.5 (table) + 0.07 (can height/2) -->
        <origin xyz="0.6 0 1.0" rpy="${-atan2(0.43, 0.6)} 0 ${pi/2}"/>
    </joint>

    <!-- Gazebo plugins for cameras -->
    <gazebo reference="camera1_link">
        <sensor type="camera" name="camera1">
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>camera1</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera1_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="camera2_link">
        <sensor type="camera" name="camera2">
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>camera2</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera2_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="camera3_link">
        <sensor type="camera" name="camera3">
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>camera3</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera3_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="camera4_link">
        <sensor type="camera" name="camera4">
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>camera4</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera4_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="table">
        <material>Gazebo/Wood</material>
        <static>true</static>
    </gazebo>

    <gazebo reference="coke_can">
        <material>Gazebo/Red</material>
    </gazebo>

</robot>